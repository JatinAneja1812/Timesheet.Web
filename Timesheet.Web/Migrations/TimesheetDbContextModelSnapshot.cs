// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Timesheet.Web.Models;

namespace Timesheet.Web.Migrations
{
    [DbContext(typeof(TimesheetDbContext))]
    partial class TimesheetDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Timesheet.Web.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BillingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactTelephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            BillingAddress = "3 Hopeless Lane, Fiddler District, Middlesbrough",
                            CompanyName = "Fiddler Fingers",
                            ContactEmail = "fw@example.com",
                            ContactName = "Free Willy",
                            ContactTelephone = "01234 121212"
                        },
                        new
                        {
                            ClientId = 2,
                            BillingAddress = "42 Cloud Lane, Cloud District, Middlesbrough",
                            CompanyName = "Pie in the Sky",
                            ContactEmail = "sally@example.com",
                            ContactName = "Sally Pie",
                            ContactTelephone = "01234 341245"
                        });
                });

            modelBuilder.Entity("Timesheet.Web.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            Address = "4 Wonky Way, Middlesbrough",
                            Name = "Willy's Hovel"
                        },
                        new
                        {
                            LocationId = 2,
                            Address = "3 Hopeless Lane, Fiddler District, Middlesbrough",
                            Name = "Fiddler Fingers Head Office"
                        },
                        new
                        {
                            LocationId = 3,
                            Address = "13 Stack It Road, Storage District, Middlesbrough",
                            Name = "Fiddler Fingers Warehouse"
                        },
                        new
                        {
                            LocationId = 4,
                            Address = "1 Crust Avenue, Busy District, Middlesbrough",
                            Name = "Sally's Place"
                        },
                        new
                        {
                            LocationId = 5,
                            Address = "3 Crust Avenue, Busy District, Middlesbrough",
                            Name = "Sally's Takeout"
                        });
                });

            modelBuilder.Entity("Timesheet.Web.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Forename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId");

                    b.ToTable("Staff");

                    b.HasData(
                        new
                        {
                            StaffId = 1,
                            Email = "tyrone.davison@example.com",
                            Forename = "Tyrone",
                            Surname = "Davison"
                        },
                        new
                        {
                            StaffId = 2,
                            Email = "zafar.khan@example.com",
                            Forename = "Zafar",
                            Surname = "Khan"
                        },
                        new
                        {
                            StaffId = 3,
                            Email = "james.fairbairn@example.com",
                            Forename = "James",
                            Surname = "Fairbairn"
                        });
                });

            modelBuilder.Entity("Timesheet.Web.Models.Timesheet", b =>
                {
                    b.Property<int>("TimesheetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("MinutesWorked")
                        .HasColumnType("int");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("TimesheetId");

                    b.HasIndex("ClientId");

                    b.HasIndex("LocationId");

                    b.HasIndex("StaffId");

                    b.ToTable("Timesheets");

                    b.HasData(
                        new
                        {
                            TimesheetId = 1,
                            ClientId = 2,
                            LocationId = 4,
                            MinutesWorked = 80,
                            StaffId = 1
                        });
                });

            modelBuilder.Entity("Timesheet.Web.Models.Timesheet", b =>
                {
                    b.HasOne("Timesheet.Web.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Timesheet.Web.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Timesheet.Web.Models.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
